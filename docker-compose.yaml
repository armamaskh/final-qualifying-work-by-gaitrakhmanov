services:

  app_b:
    build:
      dockerfile: ./DockerFile
      context: ./b/
    environment:
      APP_CONFIG__DB__URL: postgresql+asyncpg://admin:root@postgres_db:5432/db_collections
    env_file:
      - ./b/.env
    ports:
      - "8000:8000"
    volumes:
      - ./b:/b
    depends_on:
      postgres_db:
        condition: service_healthy

  app_f:
    build:
      dockerfile: ./DockerFile
      context: ./f/
    ports:
      - "3000:80"
    depends_on:
      - app_b

  postgres_db:    
    container_name:  postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db_collections
      POSTGRES_PASSWORD: root
      POSTGRES_USER: admin
    image: postgres:17.5-alpine3.22
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
      

  postgres_admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5005:80"
    depends_on:
      postgres_db:
        condition: service_healthy
