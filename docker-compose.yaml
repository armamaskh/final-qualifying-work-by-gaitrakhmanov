services:

  app_b:
    build:
      dockerfile: ./DockerFile
      context: ./b/
    environment:
      APP_CONFIG__DB__URL: postgresql+asyncpg://user:password@postgres_db:5432/db_collections
    ports:
      - "8000:8000"
    volumes:
      - ./b:/b
    depends_on:
      postgres_db:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./b
          target: /app_b
        - action: rebuild
          path: ./poetry.lock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 3


  app_f:
    build:
      dockerfile: ./DockerFile
      context: ./f/
    ports:
      - "3000:3000"
    depends_on:
      app_b:
        condition: service_healthy


  postgres_db:    
    container_name:  postgres_db
    environment:
      POSTGRES_DB: db_collections
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    image: postgres:17.5-alpine3.22
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
      

  postgres_admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5005:80"
    depends_on:
      postgres_db:
        condition: service_healthy

volumes:
  pgdata: